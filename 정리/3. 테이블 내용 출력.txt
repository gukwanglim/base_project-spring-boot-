1. 테이블에 저장된 내용을 가져와 출력하기 위해서는 데이터 베이스 insert를 하기 위한 패키지가 필요하다.

    (사진 1번)
    해당 패키지(repositroy)에 생성된 클래스는 JpaRepository를 상속받아 사용하게 되는데 사진 2번과 같이 JpaRepository에 에러가 발생했다.
        그 이유는 데이터 타입이 interface가 아닌 class로 했기 때문이다.(사진 3번) 
        (JpaRepository<>는 interface, 사진 4번)
         (JpaRepository<User, Integer>와 같은 형태로 사용되며 User 테이블의 프라이머리키는 숫자라는 뜻이다.)

2. 이제 데이터 베이스에서 가져온 정보를 브라우저에 띄우기 위해서 사진 5번과 같이 HelloController.java에 @GetMapping 어노테이션을 사용한다.
    @PathVariable을 사용하여 int로 id를 받을 수 있게 하여 userRepositroy에 존재하는 id를 찾는 것이다.(Mapping 주소에 {id}로 받아와야한다.)
        (userRepositroy를 사용하기 위해서는 @Autowired 어노테이션을 사용하여 UserRepositroy.java를 불러와야 한다.)
    
    만약, id가 존재하지 않는다면 에러가 발생하기 때문에 new Supplier<IllegalArgumentException>() {}를 이용하여 에러가 발생했을 때, 어떤 동작을 하게 되는지 정해준다.

3. 데이터가 잘 출력되는지 확인하기 위해 DB에 정보를 추가한다.(사진 6번, createDate, role 같은 경우는 일단 null 상태로 놔둔다.)

4. spring boot를 실행하여 주소(http://localhost:8080/hello/1)로 들어가면 사진 7번과 같이 데이터 베이스에 입력된 user의 정보를 출력할 수 있게 된다.